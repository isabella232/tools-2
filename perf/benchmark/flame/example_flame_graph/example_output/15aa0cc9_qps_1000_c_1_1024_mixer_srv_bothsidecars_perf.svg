<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1200" height="646" onload="init(evt)" version="1.1" viewBox="0 0 1200 646"><defs><linearGradient id="background" x1="0" x2="0" y1="0" y2="1"><stop offset="5%" stop-color="#eee"/><stop offset="95%" stop-color="#eeeeb0"/></linearGradient></defs><style type="text/css">text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); } #search { opacity:0.1; cursor:pointer; } #search:hover, #search.show { opacity:1; } #subtitle { text-anchor:middle; font-color:rgb(160,160,160); } #title { text-anchor:middle; font-size:17px} #unzoom { cursor:pointer; } #frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; } .hide { display:none; } .parent { opacity:0.5; }</style><script type="text/ecmascript"><![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]></script><rect width="1200" height="646" x="0" y="0" fill="url(#background)"/><text id="title" x="600" y="24">Flame Graph</text><text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text><text id="search" x="1090" y="24">Search</text><g id="frames"><g><title>Envoy::MessageUtil::hash (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="149" fill="#E0CC30" rx="2" ry="2"/><text x="13" y="159.5">Envoy::MessageUtil::hash</text></g><g><title>event_base_loop (2 samples, 50.00%)</title><rect width="590" height="15" x="600" y="517" fill="#EF722C" rx="2" ry="2"/><text x="603" y="527.5">event_base_loop</text></g><g><title>http_parser_execute (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="341" fill="#F7242C" rx="2" ry="2"/><text x="308" y="351.5">http_parser_execute</text></g><g><title>event_process_active_single_queue (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="469" fill="#E46B0C" rx="2" ry="2"/><text x="13" y="479.5">event_process_active_single_queue</text></g><g><title>Envoy::Server::ListenerManagerImpl::addOrUpdateListener (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="165" fill="#E9D421" rx="2" ry="2"/><text x="13" y="175.5">Envoy::Server::ListenerManagerImpl::add..</text></g><g><title>Envoy::Http::Http1::ConnectionImpl::dispatch (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="373" fill="#D3C414" rx="2" ry="2"/><text x="308" y="383.5">Envoy::Http::Http1::ConnectionImpl::dis..</text></g><g><title>main (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="533" fill="#F3B20F" rx="2" ry="2"/><text x="13" y="543.5">main</text></g><g><title>Envoy::Http::CodecClient::onData (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="373" fill="#ECB627" rx="2" ry="2"/><text x="13" y="383.5">Envoy::Http::CodecClient::onData</text></g><g><title>Envoy::Server::AdminImpl::runCallback (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="213" fill="#F21110" rx="2" ry="2"/><text x="308" y="223.5">Envoy::Server::AdminImpl::runCallback</text></g><g><title>Envoy::Router::Filter::UpstreamRequest::decodeData (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="293" fill="#D64932" rx="2" ry="2"/><text x="13" y="303.5">Envoy::Router::Filter::UpstreamRequest:..</text></g><g><title>Envoy::Server::PrometheusStatsFormatter::statsAsPrometheus (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="165" fill="#F7A61C" rx="2" ry="2"/><text x="308" y="175.5">Envoy::Server::PrometheusStatsFormatter..</text></g><g><title>google::protobuf::TextFormat::Printer::PrintField (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="53" fill="#D93011" rx="2" ry="2"/><text x="13" y="63.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="277" fill="#F38313" rx="2" ry="2"/><text x="308" y="287.5">Envoy::Http::ConnectionManagerImpl::Act..</text></g><g><title>event_base_loop (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="485" fill="#EF722C" rx="2" ry="2"/><text x="13" y="495.5">event_base_loop</text></g><g><title>Envoy::Config::GrpcMuxSubscriptionImpl::onConfigUpdate (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="213" fill="#DA4433" rx="2" ry="2"/><text x="13" y="223.5">Envoy::Config::GrpcMuxSubscriptionImpl:..</text></g><g><title>google::protobuf::TextFormat::Printer::TextGenerator::Write (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="37" fill="#CE5B0D" rx="2" ry="2"/><text x="13" y="47.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>Envoy::Http::CodecClient::CodecReadFilter::onData (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="389" fill="#F01728" rx="2" ry="2"/><text x="13" y="399.5">Envoy::Http::CodecClient::CodecReadFilt..</text></g><g><title>google::protobuf::TextFormat::Printer::PrintField (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="85" fill="#D93011" rx="2" ry="2"/><text x="13" y="95.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>Envoy::Network::ConnectionImpl::onFileEvent (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="437" fill="#E8111D" rx="2" ry="2"/><text x="13" y="447.5">Envoy::Network::ConnectionImpl::onFileEvent</text></g><g><title>Envoy::Server::InstanceImpl::run (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="501" fill="#DC1721" rx="2" ry="2"/><text x="13" y="511.5">Envoy::Server::InstanceImpl::run</text></g><g><title>google::protobuf::TextFormat::Printer::PrintToString (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="133" fill="#E7E02D" rx="2" ry="2"/><text x="13" y="143.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>nghttp2_session_mem_recv (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="341" fill="#EAA60C" rx="2" ry="2"/><text x="13" y="351.5">nghttp2_session_mem_recv</text></g><g><title>Envoy::Http::Http2::ConnectionImpl::dispatch (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="357" fill="#E49B36" rx="2" ry="2"/><text x="13" y="367.5">Envoy::Http::Http2::ConnectionImpl::dis..</text></g><g><title>Envoy::Http::Http1::ConnectionImpl::dispatchSlice (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="357" fill="#F97C1E" rx="2" ry="2"/><text x="308" y="367.5">Envoy::Http::Http1::ConnectionImpl::dis..</text></g><g><title>start_thread (2 samples, 50.00%)</title><rect width="590" height="15" x="600" y="565" fill="#FE740C" rx="2" ry="2"/><text x="603" y="575.5">start_thread</text></g><g><title>Envoy::Http::AsyncStreamImpl::encodeData (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="277" fill="#CE9E1E" rx="2" ry="2"/><text x="13" y="287.5">Envoy::Http::AsyncStreamImpl::encodeData</text></g><g><title>Envoy::Server::AdminImpl::handlerPrometheusStats (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="181" fill="#D75421" rx="2" ry="2"/><text x="308" y="191.5">Envoy::Server::AdminImpl::handlerPromet..</text></g><g><title>Envoy::Http::Http1::ServerConnectionImpl::onMessageComplete (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="293" fill="#F00512" rx="2" ry="2"/><text x="308" y="303.5">Envoy::Http::Http1::ServerConnectionImp..</text></g><g><title>event_add (1 samples, 25.00%)</title><rect width="295" height="15" x="600" y="469" fill="#CD981D" rx="2" ry="2"/><text x="603" y="479.5">event_add</text></g><g><title>Envoy::Event::TimerImpl::enableTimer (1 samples, 25.00%)</title><rect width="295" height="15" x="600" y="485" fill="#D02234" rx="2" ry="2"/><text x="603" y="495.5">Envoy::Event::TimerImpl::enableTimer</text></g><g><title>__libc_start_main (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="549" fill="#E18034" rx="2" ry="2"/><text x="13" y="559.5">__libc_start_main</text></g><g><title>std::__1::__function::__func&lt;Envoy::Server::AdminImpl::AdminImpl (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="197" fill="#CF4E28" rx="2" ry="2"/><text x="308" y="207.5">std::__1::__function::__func&lt;Envoy::Ser..</text></g><g><title>Envoy::Server::LdsApiImpl::onConfigUpdate (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="181" fill="#E1361B" rx="2" ry="2"/><text x="13" y="191.5">Envoy::Server::LdsApiImpl::onConfigUpdate</text></g><g><title>Envoy::Network::ConnectionImpl::onReadReady (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="421" fill="#E6B80C" rx="2" ry="2"/><text x="13" y="431.5">Envoy::Network::ConnectionImpl::onReadReady</text></g><g><title>Envoy::Server::LdsApiImpl::onConfigUpdate (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="197" fill="#E1361B" rx="2" ry="2"/><text x="13" y="207.5">Envoy::Server::LdsApiImpl::onConfigUpdate</text></g><g><title>Envoy::Config::GrpcMuxImpl::onDiscoveryResponse (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="229" fill="#DA7E19" rx="2" ry="2"/><text x="13" y="239.5">Envoy::Config::GrpcMuxImpl::onDiscovery..</text></g><g><title>Envoy::Server::AdminFilter::onComplete (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="229" fill="#CFA223" rx="2" ry="2"/><text x="308" y="239.5">Envoy::Server::AdminFilter::onComplete</text></g><g><title>pthread_mutex_lock (1 samples, 25.00%)</title><rect width="295" height="15" x="895" y="501" fill="#E89E24" rx="2" ry="2"/><text x="898" y="511.5">pthread_mutex_lock</text></g><g><title>Envoy::Server::WorkerImpl::threadRoutine (2 samples, 50.00%)</title><rect width="590" height="15" x="600" y="533" fill="#FB842B" rx="2" ry="2"/><text x="603" y="543.5">Envoy::Server::WorkerImpl::threadRoutine</text></g><g><title>google::protobuf::TextFormat::Printer::Print (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="69" fill="#F8A921" rx="2" ry="2"/><text x="13" y="79.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>nghttp2_session_on_data_received (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="325" fill="#CE271A" rx="2" ry="2"/><text x="13" y="335.5">nghttp2_session_on_data_received</text></g><g><title>Envoy::Http::Http2::ConnectionImpl::onFrameReceived (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="309" fill="#E2D02C" rx="2" ry="2"/><text x="13" y="319.5">Envoy::Http::Http2::ConnectionImpl::onF..</text></g><g><title>Envoy::Server::AdminFilter::decodeHeaders (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="245" fill="#F38914" rx="2" ry="2"/><text x="308" y="255.5">Envoy::Server::AdminFilter::decodeHeaders</text></g><g><title>Envoy::MainCommonBase::run (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="517" fill="#ECD214" rx="2" ry="2"/><text x="13" y="527.5">Envoy::MainCommonBase::run</text></g><g><title>Envoy::Http::Http1::ConnectionImpl::onMessageCompleteBase (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="309" fill="#E68234" rx="2" ry="2"/><text x="308" y="319.5">Envoy::Http::Http1::ConnectionImpl::onM..</text></g><g><title>google::protobuf::TextFormat::Printer::Print (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="117" fill="#F8A921" rx="2" ry="2"/><text x="13" y="127.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>[unknown] (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="565" fill="#D58A2D" rx="2" ry="2"/><text x="13" y="575.5">[unknown]</text></g><g><title>envoy (4 samples, 100.00%)</title><rect width="1180" height="15" x="10" y="581" fill="#DB6012" rx="2" ry="2"/><text x="13" y="591.5">envoy</text></g><g><title>Envoy::Grpc::AsyncStreamImpl::onData (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="261" fill="#EDD605" rx="2" ry="2"/><text x="13" y="271.5">Envoy::Grpc::AsyncStreamImpl::onData</text></g><g><title>strlen (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="149" fill="#D29E25" rx="2" ry="2"/><text x="308" y="159.5">strlen</text></g><g><title>Envoy::Http::ConnectionManagerImpl::onData (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="389" fill="#D68017" rx="2" ry="2"/><text x="308" y="399.5">Envoy::Http::ConnectionManagerImpl::onD..</text></g><g><title>Envoy::Http::ConnectionManagerImpl::ActiveStream::decodeHeaders (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="261" fill="#F38313" rx="2" ry="2"/><text x="308" y="271.5">Envoy::Http::ConnectionManagerImpl::Act..</text></g><g><title>google::protobuf::TextFormat::Printer::Print (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="101" fill="#F8A921" rx="2" ry="2"/><text x="13" y="111.5">google::protobuf::TextFormat::Printer::..</text></g><g><title>Envoy::Event::FileEventImpl::assignEvents (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="453" fill="#E76B08" rx="2" ry="2"/><text x="13" y="463.5">Envoy::Event::FileEventImpl::assignEvents</text></g><g><title>Envoy::Thread::ThreadImplPosix::ThreadImplPosix (2 samples, 50.00%)</title><rect width="590" height="15" x="600" y="549" fill="#D3A636" rx="2" ry="2"/><text x="603" y="559.5">Envoy::Thread::ThreadImplPosix::ThreadImplPosix</text></g><g><title>event_process_active_single_queue (1 samples, 25.00%)</title><rect width="295" height="15" x="600" y="501" fill="#E46B0C" rx="2" ry="2"/><text x="603" y="511.5">event_process_active_single_queue</text></g><g><title>all (4 samples, 100%)</title><rect width="1180" height="15" x="10" y="597" fill="#FE3D0E" rx="2" ry="2"/></g><g><title>Envoy::Http::Http1::ConnectionImpl::$_7::__invoke (1 samples, 25.00%)</title><rect width="295" height="15" x="305" y="325" fill="#D2150A" rx="2" ry="2"/><text x="308" y="335.5">Envoy::Http::Http1::ConnectionImpl::$_7..</text></g><g><title>Envoy::Grpc::AsyncStreamCallbacks&lt;envoy::api::v2::DiscoveryResponse&gt;::onReceiveMessageRaw (1 samples, 25.00%)</title><rect width="295" height="15" x="10" y="245" fill="#FBE30F" rx="2" ry="2"/><text x="13" y="255.5">Envoy::Grpc::AsyncStreamCallbacks&lt;envoy..</text></g><g><title>event_add_nolock_ (1 samples, 25.00%)</title><rect width="295" height="15" x="600" y="453" fill="#FDBD03" rx="2" ry="2"/><text x="603" y="463.5">event_add_nolock_</text></g><g><title>Envoy::Network::FilterManagerImpl::onContinueReading (2 samples, 50.00%)</title><rect width="590" height="15" x="10" y="405" fill="#D7B809" rx="2" ry="2"/><text x="13" y="415.5">Envoy::Network::FilterManagerImpl::onContinueReading</text></g></g></svg>